import React, {useEffect, useState} from "react"
import Head from 'next/head'
import Image from 'next/image'
import axios from 'axios';

import { useRouter } from 'next/router'

import Button from 'react-bootstrap/Button'
import Form from 'react-bootstrap/Form'

import styles from '../../styles/Home.module.css'

const isBrowser = () => typeof window !== "undefined"

export default function Signup() {
  const isBrowser = () => typeof window !== "undefined"
  const DefaultHeader = isBrowser() ? { "authorization": "Token " + localStorage.getItem('token') } : ''
  const login_credentials = DefaultHeader.authorization !== "Token null" ? DefaultHeader : ''
  let router = useRouter()
  const { redirection_url } = router.query

  const [isLoggedIn, setIsLoggedIn] = useState(true)

  useEffect(() => {
    if (isBrowser()) {
      let value = localStorage.getItem('token')
      if (value && value !== undefined && value !== 'undefined' && value !== null && value.length > 5 && value != '') {
        setIsLoggedIn(true)
      } else {
        setIsLoggedIn(false)
      }
    }
  }, [isBrowser() ? localStorage.getItem('token') : ''])

  useEffect(() => {
    if (!isLoggedIn) {
      router.push(`/login`)
    }
  }, [isBrowser(),redirection_url,isLoggedIn])

  function logOut(event) {
    event.preventDefault();
    if (localStorage.getItem('token') === undefined ){
      window.location.reload(true);
    }else{
      var formData = new FormData();
      axios.post(process.env.NEXT_PUBLIC_API_HOST+'/api/auth/logout', formData, { headers: login_credentials })
      .then(res => {
        document.getElementById("error-div").innerText ="Logged out Successful";
        localStorage.removeItem('email');
        localStorage.removeItem('token');
        localStorage.removeItem('user_id');
        setIsLoggedIn(!isLoggedIn)
        router.push('/')
      }).catch(error => {
        if(error.response){
          // let error_messages = error.response.statusText + "<br>"
          let error_messages =''
          for (var key in error.response.data){
            error_messages += error.response.data[key] 
          }
          if (error_messages === "Invalid token.") {
            document.getElementById("error-div").innerText ="Logged out Successful";
            localStorage.removeItem('email');
            localStorage.removeItem('token');
            localStorage.removeItem('user_id');
            setIsLoggedIn(!isLoggedIn)
            router.push('/')
          }
          document.getElementById("error-div").innerText =error_messages;
        }
      });
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Logout</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        Logout
        <section className={`col-12`}>
          <Button variant="primary" onClick={(e)=> logOut(e)}>
            Logout
          </Button>
          <p id="error-div"></p>
          <style jsx>{`
              section {
                max-width: 600px;
              }
              .title {
                color: #8592e0;
              }
              .text-left {
                text-align: left;
              }
          `}</style>
        </section>
      </main>
    </div>
  )
}
